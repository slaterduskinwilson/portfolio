<%# this is the dropdown for editing the metadata of individual songs %> 
<div class="updatesongs">
    <!-- the below code is from a template from w3schools -->
    <div class="dropdown">
        <button class="dropbtn">Edit Song Metadata?</button>
        <div class="dropdown-content">
            <!-- create a dropdown where each item displays one of the songs in the bucket, along with an icon to show/hide -->
            <ul>

            <% bucketPlaylist.forEach((element, index) => { %>
                <li class="updatesonglink" id="<%= element.metadata.metadata.uniqueID%>" data-songtitle="<%= element.metadata.metadata.songname%>" data-filename="<%= element.metadata.name %>" >
                    <%= element.metadata.metadata.songname%> 
                     <i class="fa-solid fa-toilet-paper editmetadata hidden"> edit? </i>
                <% }) %>
            </li>

            <!-- YEEEEEESSSSS! I now have the entire object passed to this page, and I drilled down into the object to get the songname to display in the dropdown! COOL! 
            aaaaaand the id of each selected element should be that item's uniqueID.... -->
            <!-- update: uniqueID isn't something i can query by, so i added data-filename to use instead -->

            </ul>
        </div>
      </div>
     
      <!-- below is more w3schools templating for a hidden form, that will show itself when i click any of those dropdown links -->
<div class="form-popup" id="myForm">


<form action="/update" class="form-container" method="post" id="updater-form">
    <!-- from MDN: method: The HTTP method used to send the data: POST or GET.
The POST method should always be used if the data is going to result in a change to the server's database, because this can be made more resistant to cross-site forgery request attacks.
The GET method should only be used for forms that don't change user data (e.g. a search form). It is recommended for when you want to be able to bookmark or share the URL.
 -->
    <h3 id="form-title">Edit Song: </h3>

        <input type="text" name="songname" id="songname" placeholder="song name:" >
        <input type="text" name="superhero" id="superhero" placeholder="superhero:" >
        <input type="text" name="planet" id="planet" placeholder="planet:" >
        <input type="text" name="beatle" id="beatle" placeholder="beatle:" >
        <input type="text" name="artifact" id="artifact" placeholder="artifact:" >

        <button type="submit" class="btn">Submit</button>
        <button type="submit" class="btn" formaction="/delete">Delete This Song!</button>
        <!-- formaction overrides the default action of the form the button belongs to, which allows us to have two different submit buttons in one form! neat! -->
        
    </form>

</div>

</div>